"use strict";(self.webpackChunkdocs_site=self.webpackChunkdocs_site||[]).push([[856],{1777:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>o,contentTitle:()=>a,default:()=>h,frontMatter:()=>l,metadata:()=>t,toc:()=>c});const t=JSON.parse('{"id":"bella-openapi/intro","title":"Bella OpenAPI","description":"Static Badge","source":"@site/i18n/en/docusaurus-plugin-content-docs/current/bella-openapi/intro.md","sourceDirName":"bella-openapi","slug":"/bella-openapi/intro","permalink":"/en/docs/bella-openapi/intro","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{},"sidebar":"documentationSidebar","previous":{"title":"\u4ecb\u7ecd\uff08Introduction\uff09","permalink":"/en/docs/intro"},"next":{"title":"Bella OpenAPI Configuration Details","permalink":"/en/docs/bella-openapi/configuration-details"}}');var s=i(4848),r=i(8453);const l={},a="Bella OpenAPI",o={},c=[{value:"Table of Contents",id:"table-of-contents",level:2},{value:"Core Functionalities",id:"core-functionalities",level:2},{value:"AI Capabilities",id:"ai-capabilities",level:3},{value:"Metadata Management",id:"metadata-management",level:3},{value:"Unified Login Service",id:"unified-login-service",level:3},{value:"Billing and Rate Limiting",id:"billing-and-rate-limiting",level:3},{value:"System Advantages",id:"system-advantages",level:2},{value:"Large-scale Production Environment Validation",id:"large-scale-production-environment-validation",level:3},{value:"Rich Capabilities",id:"rich-capabilities",level:3},{value:"Excellent Features",id:"excellent-features",level:3},{value:"Unified Metadata Management",id:"unified-metadata-management",level:3},{value:"High-performance Cache Design",id:"high-performance-cache-design",level:3},{value:"High-performance Log Processing Framework",id:"high-performance-log-processing-framework",level:3},{value:"Efficient Distributed Rate Limiting and Channel Performance Monitoring",id:"efficient-distributed-rate-limiting-and-channel-performance-monitoring",level:3},{value:"Unified Error Handling",id:"unified-error-handling",level:3},{value:"Secure and Reliable",id:"secure-and-reliable",level:3},{value:"Scalability",id:"scalability",level:3},{value:"Java-friendly Technology Stack",id:"java-friendly-technology-stack",level:3},{value:"Convenient Experience",id:"convenient-experience",level:3},{value:"Quick Start",id:"quick-start",level:2},{value:"Prerequisites",id:"prerequisites",level:3},{value:"Starting the Service",id:"starting-the-service",level:3},{value:"FAQ and Solutions",id:"faq-and-solutions",level:2},{value:"1. Frontend compilation fails when using development environment with the startup script",id:"1-frontend-compilation-fails-when-using-development-environment-with-the-startup-script",level:3},{value:"2. Initialize and start the system, clearing existing data (development, testing environment)",id:"2-initialize-and-start-the-system-clearing-existing-data-development-testing-environment",level:3},{value:"3. MySQL or Redis container fails to start",id:"3-mysql-or-redis-container-fails-to-start",level:3},{value:"Related Documentation",id:"related-documentation",level:2}];function d(e){const n={a:"a",code:"code",em:"em",h1:"h1",h2:"h2",h3:"h3",header:"header",hr:"hr",img:"img",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,r.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.header,{children:(0,s.jsx)(n.h1,{id:"bella-openapi",children:"Bella OpenAPI"})}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.a,{href:"https://deepwiki.com/LianjiaTech/bella-openapi",children:(0,s.jsx)(n.img,{src:"https://img.shields.io/badge/read-deepwiki-blue?style=flat-square",alt:"Static Badge"})})}),"\n",(0,s.jsx)(n.p,{children:"Bella OpenAPI is an API gateway providing rich AI capabilities, comparable to openrouter. Unlike openrouter, in addition to chat-completion capabilities, it also offers text-embedding, automatic speech recognition (ASR), text-to-speech (TTS), text-to-image, image-to-image, and many other AI capabilities, while integrating billing, rate limiting, and resource management functionalities. All integrated capabilities have been validated in large-scale production environments."}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["We have deployed an online experience version of Bella OpenAPI. You can log in and access ",(0,s.jsx)(n.a,{href:"https://api.bella.top",children:"Bella OpenAPI"})]}),"\n",(0,s.jsxs)(n.li,{children:["For quick startup and service experience, please read: ",(0,s.jsx)(n.a,{href:"#quick-start",children:"Quick Start"})]}),"\n",(0,s.jsxs)(n.li,{children:["To understand detailed environment variable configuration and startup deployment details, please read: ",(0,s.jsx)(n.a,{href:"/en/docs/bella-openapi/configuration-details",children:"Configuration Details"})," and ",(0,s.jsx)(n.a,{href:"/en/docs/bella-openapi/startup-deployment-details",children:"Startup and Deployment Details"})]}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"table-of-contents",children:"Table of Contents"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.a,{href:"#core-functionalities",children:"Core Functionalities"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.a,{href:"#ai-capabilities",children:"AI Capabilities"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.a,{href:"#metadata-management",children:"Metadata Management"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.a,{href:"#unified-login-service",children:"Unified Login Service"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.a,{href:"#billing-and-rate-limiting",children:"Billing and Rate Limiting"})}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.a,{href:"#system-advantages",children:"System Advantages"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.a,{href:"#large-scale-production-environment-validation",children:"Large-scale Production Environment Validation"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.a,{href:"#rich-capabilities",children:"Rich Capabilities"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.a,{href:"#excellent-features",children:"Excellent Features"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.a,{href:"#unified-metadata-management",children:"Unified Metadata Management"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.a,{href:"#high-performance-cache-design",children:"High-performance Cache Design"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.a,{href:"#high-performance-log-processing-framework",children:"High-performance Log Processing Framework"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.a,{href:"#efficient-distributed-rate-limiting",children:"Efficient Distributed Rate Limiting"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.a,{href:"#unified-error-handling",children:"Unified Error Handling"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.a,{href:"#secure-and-reliable",children:"Secure and Reliable"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.a,{href:"#scalability",children:"Scalability"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.a,{href:"#java-friendly-technology-stack",children:"Java-friendly Technology Stack"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.a,{href:"#convenient-experience",children:"Convenient Experience"})}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.a,{href:"#quick-start",children:"Quick Start"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.a,{href:"#faq-and-solutions",children:"FAQ and Solutions"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.a,{href:"#related-documentation",children:"Related Documentation"})}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"core-functionalities",children:"Core Functionalities"}),"\n",(0,s.jsx)(n.h3,{id:"ai-capabilities",children:"AI Capabilities"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Text Processing"})}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Chat Completion"}),": Provides conversational completion capability"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Text Embedding"}),": Generates vector representations of text for semantic search and similarity calculations"]}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Voice Services"})}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Real-time Speech Recognition"}),": Supports streaming speech recognition and one-shot speech recognition for real-time interaction scenarios"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Audio Transcription"}),": Supports uploading audio files for offline transcription"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Text-to-Speech"}),": Converts text to natural voice output, with streaming support"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Real-time Conversation"}),": Supports users' real-time voice input via microphone, automatically recognizes speech content, calls the large model to generate replies, and converts the reply content to speech output"]}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Image Services"})}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Image-to-Image"}),": Edits images to create new images (coming soon)"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Text-to-Image"}),": Generates images from text descriptions (coming soon)"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"metadata-management",children:"Metadata Management"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Multi-level Structure"}),": Adopts a Category-Endpoint-Model-Channel four-layer structure"]}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Category"}),": Top-level classification of API services, such as voice services, text services, etc."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Endpoint"}),": Specific API functionality entry points, such as real-time speech recognition, chat completion, etc."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Model"}),": AI models supporting each endpoint, such as different speech recognition models, large language models, etc."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Channel"}),": Specific service provider implementations, including vendor, protocol, and configuration information"]}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Flexible Routing Mechanism"}),": Intelligently selects the most appropriate service channel based on user requests and configuration"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Visual Management Interface"}),": Provides an intuitive web interface for metadata configuration and management"]}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"unified-login-service",children:"Unified Login Service"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Multiple Authentication Methods"}),": Supports OAuth 2.0, CAS single sign-on, and API Key authentication"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Session Management"}),": Redis-based distributed session storage"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"User Permissions"}),": Fine-grained permission control and management"]}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"billing-and-rate-limiting",children:"Billing and Rate Limiting"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"API Key Management"}),": Supports hierarchical API Key structure"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Quota Control"}),": Manages API usage by monthly quotas"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Rate Limiting Mechanism"}),": Redis-based distributed rate limiting implementation"]}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"system-advantages",children:"System Advantages"}),"\n",(0,s.jsx)(n.h3,{id:"large-scale-production-environment-validation",children:"Large-scale Production Environment Validation"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Extreme Stability"}),": Already serving all Beike's business lines, with daily average of 150 million API calls, withstanding large-scale production environment testing"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Rich Business Scenarios"}),": Wide coverage of business scenarios, adaptable to most production environment situations"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Extensive Use Cases"}),": Already serving all Beike's business lines, withstanding large-scale production environment testing"]}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"rich-capabilities",children:"Rich Capabilities"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Comprehensive AI Capabilities"}),": Supports chat completion, text embedding, speech recognition (real-time, offline, one-shot), text-to-speech (with streaming support), text-to-image, image-to-image, and many other AI capabilities"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Mock Capability"}),": Built-in capability point mocking functionality, useful for unit testing and stress testing"]}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"excellent-features",children:"Excellent Features"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Function Call Support"}),": Extends function call features to LLMs that don't natively support function calls"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Routing Strategy"}),": Excellent routing strategy ensures maximum processing capacity for capability channels during peak periods"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Request Queue"}),": Supports queue features ensuring orderly processing of requests during peak periods"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Backup Models"}),": Supports backup model mechanisms (coming soon) to improve service availability"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Maximum Wait Time"}),": Supports setting maximum wait times (coming soon) to optimize user experience"]}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"unified-metadata-management",children:"Unified Metadata Management"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Flexible Multi-level Structure"}),": Adopts Category-Endpoint-Model-Channel four-layer structure, giving the system high scalability and flexibility"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Centralized Configuration"}),": All API service configurations are centrally managed for easy maintenance and monitoring"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Dynamic Routing"}),": Intelligently selects the most appropriate service channel based on user requests and configuration to improve service quality"]}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"high-performance-cache-design",children:"High-performance Cache Design"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Multi-level Cache Architecture"}),": Combines Redisson, Caffeine, and JetCache to implement collaborative work between local cache and distributed cache"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"High Throughput"}),": Local cache reduces network overhead, distributed cache ensures cluster consistency"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Automatic Expiration Mechanism"}),": Intelligent cache expiration strategy balances data consistency and performance"]}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"high-performance-log-processing-framework",children:"High-performance Log Processing Framework"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Disruptor-based Asynchronous Processing"}),": Uses high-performance Disruptor ring buffer to implement asynchronous processing of log events, significantly reducing system latency"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Multi-processor Parallel Architecture"}),": Supports multiple event processors working in parallel, simultaneously handling billing, metrics collection, and rate limiting"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Lock-free Design"}),": Uses lock-free queues and SleepingWaitStrategy, reducing thread contention and increasing throughput"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Elegant Exception Handling"}),": Integrates dedicated exception handlers to ensure log processing errors don't affect the main business process"]}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"efficient-distributed-rate-limiting-and-channel-performance-monitoring",children:"Efficient Distributed Rate Limiting and Channel Performance Monitoring"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Low Coupling"}),": Implemented based on logs, decoupled from main logic; each capability point only needs to report logs according to rules to customize performance monitoring dimensions"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Lua Script-based Atomic Operations"}),": Uses Redis+Lua scripts to implement distributed rate limiting, ensuring atomicity and consistency"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Sliding Window Algorithm"}),": Uses precise sliding window algorithm for rate limiting and monitoring, reducing storage resource usage"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Multi-level Cache Design"}),": Combines local cache and distributed cache to optimize rate limiting performance and reduce network overhead"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Concurrent Request Control"}),": For trial API keys, precisely tracks and controls the number of concurrent requests for each API key, preventing excessive resource occupation"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Automatic Expiration Mechanism"}),": Intelligently sets expiration times to avoid resource leaks and ensure long-term stable system operation"]}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"unified-error-handling",children:"Unified Error Handling"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Consistent User Experience"}),": Unified error prompt format and display method"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Fine-grained Error Classification"}),": Distinguishes between service unavailability and other error types, providing more precise feedback"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Friendly Error Prompts"}),": Uses different visual styles for different error types to improve user experience"]}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"secure-and-reliable",children:"Secure and Reliable"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Multi-level Authentication"}),": Supports OAuth 2.0, CAS single sign-on, and API Key authentication"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Fine-grained Permission Control"}),": Role-based access control ensures resource security"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Complete Audit Logs"}),": Records key operations for tracking and troubleshooting"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Production Environment Validation"}),": Verified in large-scale production environments, stable and reliable"]}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"scalability",children:"Scalability"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Microservice Architecture"}),": Spring Boot-based microservice design for horizontal scaling"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Containerized Deployment"}),": Docker and Docker Compose support, simplifying deployment and expansion"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Third-party Service Integration"}),": Flexible channel mechanism for easy integration with various AI service providers"]}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"java-friendly-technology-stack",children:"Java-friendly Technology Stack"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Spring Boot Ecosystem"}),": Based on Spring Boot framework, friendly to Java developers"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Rich Toolchain"}),": Integrates common Java development tools and libraries"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Comprehensive Documentation"}),": Provides detailed API documentation and development guides"]}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"convenient-experience",children:"Convenient Experience"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Free Cloud Experience Service"}),": You can log in and access ",(0,s.jsx)(n.a,{href:"https://api.bella.top",children:"Bella OpenAPI"})," to directly experience all capabilities"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Docker Startup Without Compilation"}),": Provides convenient startup method, automatically pulls images through startup script, no compilation required"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Convenient Startup Configuration"}),": Startup script provides rich startup parameters, you can configure as needed without modifying configuration files"]}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"quick-start",children:"Quick Start"}),"\n",(0,s.jsx)(n.p,{children:"This project uses Docker Compose to start all services, including backend API, frontend Web, MySQL, and Redis."}),"\n",(0,s.jsx)(n.h3,{id:"prerequisites",children:"Prerequisites"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["Install ",(0,s.jsx)(n.a,{href:"https://www.docker.com/get-started",children:"Docker"})]}),"\n",(0,s.jsxs)(n.li,{children:["Install ",(0,s.jsx)(n.a,{href:"https://docs.docker.com/compose/install/",children:"Docker Compose"})]}),"\n",(0,s.jsx)(n.li,{children:"Execution directory must be in the root directory of the bella-openapi project"}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"starting-the-service",children:"Starting the Service"}),"\n",(0,s.jsx)(n.p,{children:"If the image doesn't exist locally, it will pull from the remote repository"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"./start.sh \n./start.sh --github-oauth CLIENT_ID:CLIENT_SECRET --google-oauth CLIENT_ID:CLIENT_SECRET --server URL (configure oauth login service and service domain through startup parameters)\n"})}),"\n",(0,s.jsxs)(n.p,{children:["Note: If you need to configure user login, see: ",(0,s.jsx)(n.a,{href:"/en/docs/bella-openapi/configuration-details#oauth-configuration",children:"OAuth Configuration"})]}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"After starting the service, it will automatically check if a system ak exists; if not, it will generate a system ak and administrator authorization"}),"\n",(0,s.jsxs)(n.li,{children:["If you don't want to perform administrator authorization at startup (it will still check if the system ak needs to be generated), you can use the ",(0,s.jsx)(n.code,{children:"--skip-auth"})," parameter:"]}),"\n"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"./start.sh --skip-auth\n"})}),"\n",(0,s.jsx)(n.p,{children:"Common options:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"-b, --build"}),": Rebuild services after code modification"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"--github-oauth CLIENT_ID:CLIENT_SECRET"}),": Configure GitHub OAuth login"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"--google-oauth CLIENT_ID:CLIENT_SECRET"}),": Configure Google OAuth login"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"--server URL"}),": Configure service domain"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"--skip-auth"}),": Skip administrator authorization process"]}),"\n"]}),"\n",(0,s.jsxs)(n.p,{children:["For more detailed startup options and configuration instructions, please refer to ",(0,s.jsx)(n.a,{href:"/en/docs/bella-openapi/startup-deployment-details",children:"Startup and Deployment Details"}),"."]}),"\n",(0,s.jsx)(n.h2,{id:"faq-and-solutions",children:"FAQ and Solutions"}),"\n",(0,s.jsx)(n.h3,{id:"1-frontend-compilation-fails-when-using-development-environment-with-the-startup-script",children:"1. Frontend compilation fails when using development environment with the startup script"}),"\n",(0,s.jsx)(n.p,{children:"Next.js has implemented preloading optimizations in the dev environment. If you must use the dev environment, it's recommended to use next.dev to start the web service separately."}),"\n",(0,s.jsx)(n.h3,{id:"2-initialize-and-start-the-system-clearing-existing-data-development-testing-environment",children:"2. Initialize and start the system, clearing existing data (development, testing environment)"}),"\n",(0,s.jsxs)(n.ol,{children:["\n",(0,s.jsxs)(n.li,{children:["Delete database: ",(0,s.jsx)(n.code,{children:'docker exec -it bella-openapi-mysql mysql -uroot -p123456 -e "drop database bella_openapi;"'})," (replace with your username and password if they're different from default)"]}),"\n",(0,s.jsxs)(n.li,{children:["Stop services: ",(0,s.jsx)(n.code,{children:"docker-compose down"})]}),"\n",(0,s.jsxs)(n.li,{children:["Delete MySQL data: ",(0,s.jsx)(n.code,{children:"rm -rf ./mysql"})]}),"\n",(0,s.jsxs)(n.li,{children:["Delete Redis data: ",(0,s.jsx)(n.code,{children:"rm -rf ./redis"})]}),"\n",(0,s.jsxs)(n.li,{children:["Rebuild and restart: ",(0,s.jsx)(n.code,{children:"./start.sh -b"})]}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"3-mysql-or-redis-container-fails-to-start",children:"3. MySQL or Redis container fails to start"}),"\n",(0,s.jsxs)(n.p,{children:["If you encounter MySQL or Redis container startup failures, it's usually due to data directory permission issues or system configuration. For detailed solutions, please refer to ",(0,s.jsx)(n.a,{href:"/en/docs/bella-openapi/startup-deployment-details#3-mysql-or-redis-container-fails-to-start",children:"Startup and Deployment Details"}),"."]}),"\n",(0,s.jsx)(n.h2,{id:"related-documentation",children:"Related Documentation"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.a,{href:"/en/docs/bella-openapi/configuration-details",children:"Configuration Details"})," - Detailed introduction to environment variable configuration, database configuration, cache configuration, Apollo configuration, and login service configuration"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.a,{href:"/en/docs/bella-openapi/startup-deployment-details",children:"Startup and Deployment Details"})," - Detailed introduction to starting services, environment variable configuration, service management, and system initialization"]}),"\n"]}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.em,{children:"Last updated: 2025-03-31"})})]})}function h(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(d,{...e})}):d(e)}},8453:(e,n,i)=>{i.d(n,{R:()=>l,x:()=>a});var t=i(6540);const s={},r=t.createContext(s);function l(e){const n=t.useContext(r);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:l(e.components),t.createElement(r.Provider,{value:n},e.children)}}}]);