"use strict";(self.webpackChunkdocs_site=self.webpackChunkdocs_site||[]).push([[9868],{5809:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>l,contentTitle:()=>o,default:()=>m,frontMatter:()=>i,metadata:()=>t,toc:()=>d});const t=JSON.parse('{"id":"bella-domify/standalone-quick-start","title":"Using as a Library","description":"System Requirements","source":"@site/i18n/en/docusaurus-plugin-content-docs/current/bella-domify/standalone-quick-start.md","sourceDirName":"bella-domify","slug":"/bella-domify/standalone-quick-start","permalink":"/en/docs/bella-domify/standalone-quick-start","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{},"sidebar":"documentationSidebar","previous":{"title":"Service Startup (Integration with Knowledge Base and Knowledge Retrieval Enhancement)","permalink":"/en/docs/bella-domify/integration-knowledge-rag-integration"},"next":{"title":"Domtree Definition","permalink":"/en/docs/bella-domify/domtree"}}');var s=r(4848),a=r(8453);const i={},o="Using as a Library",l={},d=[{value:"System Requirements",id:"system-requirements",level:2},{value:"Quick Start",id:"quick-start",level:2}];function c(e){const n={code:"code",h1:"h1",h2:"h2",header:"header",li:"li",ol:"ol",p:"p",pre:"pre",ul:"ul",...(0,a.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.header,{children:(0,s.jsx)(n.h1,{id:"using-as-a-library",children:"Using as a Library"})}),"\n",(0,s.jsx)(n.h2,{id:"system-requirements",children:"System Requirements"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Python >= 3.9"}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"quick-start",children:"Quick Start"}),"\n",(0,s.jsxs)(n.ol,{children:["\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:"Install dependencies"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-shell",children:"pip install document_parser\n"})}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:"Configuration"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-python",children:'parser_config = ParserConfig(image_provider=ImageStorageProvider(),\n                             ocr_model_name="gtp-4o",\n                             # Whether to enable OCR capability\n                             # If not enabled, vision_model_provider or vision_model_list doesn\'t need to be implemented or configured\n                             ocr_enable=True, \n                             vision_model_provider=OpenAIVisionModelProvider())\nparser_context.register_all_config(parser_config)\nparser_context.register_user("userId") # User ID when requesting models, if not set it will affect OCR usage\n'})}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:"Execute parsing"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-python",children:"converter = Converter(stream=stream) # Pass in as file stream\ndom_tree = converter.dom_tree_parse( \n    remove_watermark=True,   # Whether to enable watermark removal\n    parse_stream_table=False # Whether to parse streaming tables\n)\n"})}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:"Use standard domtree [Recommended]"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-python",children:"dom_tree_json = jsonable_encoder(dom_tree)\nstandard_dom_tree = StandardDomTree.from_domtree_dict(dom_tree_json, file_info = file_info)\njson_compatible_data = jsonable_encoder(standard_dom_tree.root)\nprint(json.dumps(json_compatible_data, ensure_ascii=False))\n"})}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:"The standard domtree is a structurally and semantically more complete domtree structure. Services like bella-rag are based on this standard domtree for processing. With future iterations, the results from step 3 parsing execution will also output as standard domtree."})]})}function m(e={}){const{wrapper:n}={...(0,a.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(c,{...e})}):c(e)}},8453:(e,n,r)=>{r.d(n,{R:()=>i,x:()=>o});var t=r(6540);const s={},a=t.createContext(s);function i(e){const n=t.useContext(a);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:i(e.components),t.createElement(a.Provider,{value:n},e.children)}}}]);