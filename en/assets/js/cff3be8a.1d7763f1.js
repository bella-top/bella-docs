"use strict";(self.webpackChunkdocs_site=self.webpackChunkdocs_site||[]).push([[5947],{1348:(n,e,i)=>{i.r(e),i.d(e,{assets:()=>s,contentTitle:()=>a,default:()=>h,frontMatter:()=>l,metadata:()=>o,toc:()=>c});const o=JSON.parse('{"id":"bella-openapi/configuration-details","title":"Bella OpenAPI Configuration Details","description":"This document provides detailed information about Bella OpenAPI configuration management, including environment variables, database configuration, cache configuration, Apollo configuration, login service configuration, and proxy configuration.","source":"@site/i18n/en/docusaurus-plugin-content-docs/current/bella-openapi/configuration-details.md","sourceDirName":"bella-openapi","slug":"/bella-openapi/configuration-details","permalink":"/en/docs/bella-openapi/configuration-details","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{},"sidebar":"documentationSidebar","previous":{"title":"\u4ecb\u7ecd\uff08Introduction\uff09","permalink":"/en/docs/bella-openapi/intro"},"next":{"title":"Bella OpenAPI Startup and Deployment Details","permalink":"/en/docs/bella-openapi/startup-deployment-details"}}');var r=i(4848),t=i(8453);const l={},a="Bella OpenAPI Configuration Details",s={},c=[{value:"Table of Contents",id:"table-of-contents",level:2},{value:"Environment Variable Configuration",id:"environment-variable-configuration",level:2},{value:"Environment Variable Priority",id:"environment-variable-priority",level:3},{value:"Web Build-time Environment Variables",id:"web-build-time-environment-variables",level:3},{value:"Web Runtime Environment Variables",id:"web-runtime-environment-variables",level:3},{value:"Database Configuration",id:"database-configuration",level:2},{value:"Cache Configuration",id:"cache-configuration",level:2},{value:"Apollo Configuration",id:"apollo-configuration",level:2},{value:"Login Service Configuration",id:"login-service-configuration",level:2},{value:"Session Configuration",id:"session-configuration",level:3},{value:"Login Type Configuration",id:"login-type-configuration",level:3},{value:"CAS Configuration",id:"cas-configuration",level:3},{value:"OAuth Configuration",id:"oauth-configuration",level:3},{value:"GitHub OAuth Configuration Guide",id:"github-oauth-configuration-guide",level:3},{value:"Environment Variable Configuration",id:"environment-variable-configuration-1",level:3},{value:"Proxy Configuration",id:"proxy-configuration",level:2},{value:"System Property Configuration",id:"system-property-configuration",level:3},{value:"Proxy Types",id:"proxy-types",level:3},{value:"Proxy Domains",id:"proxy-domains",level:3}];function d(n){const e={a:"a",code:"code",em:"em",h1:"h1",h2:"h2",h3:"h3",header:"header",hr:"hr",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,t.R)(),...n.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(e.header,{children:(0,r.jsx)(e.h1,{id:"bella-openapi-configuration-details",children:"Bella OpenAPI Configuration Details"})}),"\n",(0,r.jsx)(e.p,{children:"This document provides detailed information about Bella OpenAPI configuration management, including environment variables, database configuration, cache configuration, Apollo configuration, login service configuration, and proxy configuration."}),"\n",(0,r.jsx)(e.h2,{id:"table-of-contents",children:"Table of Contents"}),"\n",(0,r.jsxs)(e.ul,{children:["\n",(0,r.jsxs)(e.li,{children:[(0,r.jsx)(e.a,{href:"#environment-variable-configuration",children:"Environment Variable Configuration"}),"\n",(0,r.jsxs)(e.ul,{children:["\n",(0,r.jsx)(e.li,{children:(0,r.jsx)(e.a,{href:"#environment-variable-priority",children:"Environment Variable Priority"})}),"\n",(0,r.jsx)(e.li,{children:(0,r.jsx)(e.a,{href:"#web-build-time-environment-variables",children:"Web Build-time Environment Variables"})}),"\n",(0,r.jsx)(e.li,{children:(0,r.jsx)(e.a,{href:"#web-runtime-environment-variables",children:"Web Runtime Environment Variables"})}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(e.li,{children:(0,r.jsx)(e.a,{href:"#database-configuration",children:"Database Configuration"})}),"\n",(0,r.jsx)(e.li,{children:(0,r.jsx)(e.a,{href:"#cache-configuration",children:"Cache Configuration"})}),"\n",(0,r.jsx)(e.li,{children:(0,r.jsx)(e.a,{href:"#apollo-configuration",children:"Apollo Configuration"})}),"\n",(0,r.jsxs)(e.li,{children:[(0,r.jsx)(e.a,{href:"#login-service-configuration",children:"Login Service Configuration"}),"\n",(0,r.jsxs)(e.ul,{children:["\n",(0,r.jsx)(e.li,{children:(0,r.jsx)(e.a,{href:"#session-configuration",children:"Session Configuration"})}),"\n",(0,r.jsx)(e.li,{children:(0,r.jsx)(e.a,{href:"#login-type-configuration",children:"Login Type Configuration"})}),"\n",(0,r.jsx)(e.li,{children:(0,r.jsx)(e.a,{href:"#cas-configuration",children:"CAS Configuration"})}),"\n",(0,r.jsxs)(e.li,{children:[(0,r.jsx)(e.a,{href:"#oauth-configuration",children:"OAuth Configuration"}),"\n",(0,r.jsxs)(e.ul,{children:["\n",(0,r.jsx)(e.li,{children:(0,r.jsx)(e.a,{href:"#github-oauth-configuration-guide",children:"GitHub OAuth Configuration Guide"})}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(e.li,{children:[(0,r.jsx)(e.a,{href:"#proxy-configuration",children:"Proxy Configuration"}),"\n",(0,r.jsxs)(e.ul,{children:["\n",(0,r.jsx)(e.li,{children:(0,r.jsx)(e.a,{href:"#system-property-configuration",children:"System Property Configuration"})}),"\n",(0,r.jsx)(e.li,{children:(0,r.jsx)(e.a,{href:"#proxy-types",children:"Proxy Types"})}),"\n",(0,r.jsx)(e.li,{children:(0,r.jsx)(e.a,{href:"#proxy-domains",children:"Proxy Domains"})}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(e.h2,{id:"environment-variable-configuration",children:"Environment Variable Configuration"}),"\n",(0,r.jsx)(e.h3,{id:"environment-variable-priority",children:"Environment Variable Priority"}),"\n",(0,r.jsx)(e.p,{children:"In Docker environments, the priority of environment variables from highest to lowest is:"}),"\n",(0,r.jsxs)(e.ol,{children:["\n",(0,r.jsx)(e.li,{children:"environment settings in docker-compose.yml"}),"\n",(0,r.jsx)(e.li,{children:"ENV directives in Dockerfile"}),"\n",(0,r.jsx)(e.li,{children:".env files, yaml files"}),"\n"]}),"\n",(0,r.jsx)(e.h3,{id:"web-build-time-environment-variables",children:"Web Build-time Environment Variables"}),"\n",(0,r.jsx)(e.p,{children:"Build-time environment variables are passed to Dockerfile through the args section in docker-compose.yml:"}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:"language-yaml",children:"build:\n  context: ./web\n  args:\n    - NODE_ENV=development\n    - DEPLOY_ENV=development\n    - SKIP_INSTALL=false\n"})}),"\n",(0,r.jsx)(e.p,{children:"These variables affect the application build process. For example, Next.js will load different environment configuration files (.env.development, .env.production, etc.) based on the NODE_ENV value."}),"\n",(0,r.jsx)(e.p,{children:(0,r.jsx)(e.strong,{children:"Next.js Build Methods:"})}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:"language-bash",children:"# Execute in the web directory\ncd web\n\n# Install dependencies\nnpm install\n\n# Build with development environment variables\nNODE_ENV=development npm run build\n\n# Build with production environment variables\nNODE_ENV=production npm run build\n"})}),"\n",(0,r.jsx)(e.h3,{id:"web-runtime-environment-variables",children:"Web Runtime Environment Variables"}),"\n",(0,r.jsx)(e.p,{children:"Runtime environment variables are set through the environment section in docker-compose.yml:"}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:"language-yaml",children:"environment:\n  - NODE_ENV=development\n  - DEPLOY_ENV=development\n"})}),"\n",(0,r.jsx)(e.p,{children:"These variables take effect when the container is running, but for pre-built static files, only environment variables prefixed with NEXT_PUBLIC_ can be accessed on the client side."}),"\n",(0,r.jsx)(e.p,{children:(0,r.jsx)(e.strong,{children:"Next.js Run Methods:"})}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:"language-bash",children:"# Execute in the web directory\n\n# Run in development mode (with hot reloading)\nnpm run dev\n\n# Run the built application in production mode\nnpm run start\n\n# Run with a custom port\nPORT=3001 npm run start\n"})}),"\n",(0,r.jsx)(e.h2,{id:"database-configuration",children:"Database Configuration"}),"\n",(0,r.jsx)(e.p,{children:"MySQL database configuration example (application.yml):"}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:"language-yaml",children:"spring:\n  datasource:\n    url: jdbc:mysql://localhost:3306/bella_openapi?useUnicode=true&characterEncoding=utf8&serverTimezone=Asia/Shanghai\n    username: bella_user\n    password: 123456\n    driver-class-name: com.mysql.cj.jdbc.Driver\n    hikari:\n      maximum-pool-size: 20\n      minimum-idle: 5\n"})}),"\n",(0,r.jsx)(e.h2,{id:"cache-configuration",children:"Cache Configuration"}),"\n",(0,r.jsx)(e.p,{children:(0,r.jsx)(e.strong,{children:"Using redisson + caffeine + jetcache"})}),"\n",(0,r.jsx)(e.p,{children:"Cache configuration example (application.yml):"}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:"language-yaml",children:'spring:\n  redis:\n    redisson:\n      config: |\n        singleServerConfig:\n          address: "redis://localhost:6379"\n        codec: !<org.redisson.client.codec.StringCodec> {}\njetcache:\n  statIntervalMinutes: 0\n  areaInCacheName: false\n  hidePackages: com.ke.bella.openapi\n  local:\n    default:\n      type: caffeine\n      limit: 100\n      keyConvertor: jackson\n      expireAfterAccessInMillis: 0\n      expireAfterWriteInMillis: 120000\n  remote:\n    default:\n      type: redisson\n      redissonClient: redissonClient\n      broadcastChannel: BellaOpenapiBroadcastChannel\n      keyConvertor: jackson\n      expireAfterAccessInMillis: 0\n      expireAfterWriteInMillis: 600000\n      keyPrefix: bella-openapi-\n'})}),"\n",(0,r.jsx)(e.h2,{id:"apollo-configuration",children:"Apollo Configuration"}),"\n",(0,r.jsxs)(e.p,{children:[(0,r.jsx)(e.strong,{children:"Disabled by default. If needed, configure as follows and set the environment variable at startup:"}),"\n",(0,r.jsx)(e.strong,{children:"-Dapollo.enabled=true"})]}),"\n",(0,r.jsx)(e.p,{children:"Apollo dynamic configuration management example (application.yml):"}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:"language-yaml",children:"apollo:\n  bootstrap:\n    enabled: true\n    namespaces: application,bella.openapi\n  meta: http://apollo-config:8080\n"})}),"\n",(0,r.jsx)(e.h2,{id:"login-service-configuration",children:"Login Service Configuration"}),"\n",(0,r.jsx)(e.p,{children:(0,r.jsx)(e.strong,{children:"Provides both CAS and OAuth login methods. Can be configured via environment variables or configuration files. When using startup scripts, configuration can also be provided through script parameters."})}),"\n",(0,r.jsx)(e.h3,{id:"session-configuration",children:"Session Configuration"}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:"language-yaml",children:"bella:\n  session:\n    cookie-name: bella_openapi_sessionId\n    max-inactive-interval: 60\n    cookie-max-age: -1\n    cookie-domain: localhost # Change to your domain, automatically configured when using startup script\n    cookie-context-path: /\n"})}),"\n",(0,r.jsx)(e.h3,{id:"login-type-configuration",children:"Login Type Configuration"}),"\n",(0,r.jsxs)(e.p,{children:["Set the login type by configuring the ",(0,r.jsx)(e.code,{children:"bella.login.type"})," environment variable or in the configuration file:"]}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:"language-yaml",children:"bella:\n  login:\n    type: cas  # Available options: cas, oauth\n"})}),"\n",(0,r.jsx)(e.h3,{id:"cas-configuration",children:"CAS Configuration"}),"\n",(0,r.jsx)(e.p,{children:"CAS single sign-on configuration example:"}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:"language-yaml",children:"bella:\n  cas:\n    client-support: true  # Whether to support client\n    source: company_name  # Source identifier, default is cas\n    server-url-prefix: https://your-cas-server.com/  # CAS server URL prefix\n    server-login-url: https://your-cas-server.com/login  # CAS login URL\n    client-host: http://your-app-host:8080  # Client host\n    client-index-url: http://your-frontend-url/apikey  # Client home page URL\n"})}),"\n",(0,r.jsx)(e.h3,{id:"oauth-configuration",children:"OAuth Configuration"}),"\n",(0,r.jsx)(e.p,{children:"OAuth login configuration example:"}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:"language-yaml",children:"bella:\n  oauth:\n    client-index: http://localhost:3000  # Client home page URL\n    providers:  # Support for multiple OAuth providers\n      google:  # Google OAuth configuration\n        enabled: true\n        client-id: your-google-client-id\n        client-secret: your-google-client-secret\n        auth-uri: https://accounts.google.com/o/oauth2/v2/auth\n        token-uri: https://oauth2.googleapis.com/token\n        user-info-uri: https://www.googleapis.com/oauth2/v3/userinfo\n        scope: profile email\n      github:  # GitHub OAuth configuration\n        enabled: true\n        client-id: your-github-client-id\n        client-secret: your-github-client-secret\n        scope: read:user user:email\n        authUri: https://github.com/login/oauth/authorize\n        tokenUri: https://github.com/login/oauth/access_token\n        userInfoUri: https://api.github.com/user\n"})}),"\n",(0,r.jsx)(e.h3,{id:"github-oauth-configuration-guide",children:"GitHub OAuth Configuration Guide"}),"\n",(0,r.jsxs)(e.p,{children:["Google OAuth configuration can follow a similar approach. Log in to ",(0,r.jsx)(e.a,{href:"https://console.cloud.google.com/",children:"Google Cloud Console"})," to configure."]}),"\n",(0,r.jsx)(e.p,{children:"To configure GitHub OAuth login, follow these steps:"}),"\n",(0,r.jsxs)(e.ol,{children:["\n",(0,r.jsxs)(e.li,{children:["\n",(0,r.jsxs)(e.p,{children:[(0,r.jsx)(e.strong,{children:"Create a GitHub OAuth Application"}),":"]}),"\n",(0,r.jsxs)(e.ul,{children:["\n",(0,r.jsx)(e.li,{children:"Log in to your GitHub account"}),"\n",(0,r.jsxs)(e.li,{children:["Visit ",(0,r.jsx)(e.a,{href:"https://github.com/settings/developers",children:"GitHub Developer Settings"})]}),"\n",(0,r.jsx)(e.li,{children:'Click the "OAuth Apps" tab'}),"\n",(0,r.jsx)(e.li,{children:'Click the "New OAuth App" button'}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(e.li,{children:["\n",(0,r.jsxs)(e.p,{children:[(0,r.jsx)(e.strong,{children:"Fill in Application Information"}),":"]}),"\n",(0,r.jsxs)(e.ul,{children:["\n",(0,r.jsxs)(e.li,{children:[(0,r.jsx)(e.strong,{children:"Application name"}),': Enter your application name, e.g., "Bella OpenAPI"']}),"\n",(0,r.jsxs)(e.li,{children:[(0,r.jsx)(e.strong,{children:"Homepage URL"}),": Enter your application homepage URL, e.g., ",(0,r.jsx)(e.code,{children:"http://localhost:3000"})]}),"\n",(0,r.jsxs)(e.li,{children:[(0,r.jsx)(e.strong,{children:"Application description"}),": (Optional) Enter application description"]}),"\n",(0,r.jsxs)(e.li,{children:[(0,r.jsx)(e.strong,{children:"Authorization callback URL"}),": Enter the callback URL, which must match the domain in the configuration file. For example, if the domain is ",(0,r.jsx)(e.code,{children:"http://localhost:8080"}),", then the URL should be ",(0,r.jsx)(e.code,{children:"/openapi/oauth/callback/github"}),", or for Google, it would be ",(0,r.jsx)(e.code,{children:"http://localhost:8080/openapi/oauth/callback/google"})]}),"\n",(0,r.jsx)(e.li,{children:'Click the "Register application" button'}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(e.li,{children:["\n",(0,r.jsxs)(e.p,{children:[(0,r.jsx)(e.strong,{children:"Get Client ID and Client Secret"}),":"]}),"\n",(0,r.jsxs)(e.ul,{children:["\n",(0,r.jsx)(e.li,{children:"After successful registration, you will see the application details page"}),"\n",(0,r.jsx)(e.li,{children:'Record the "Client ID"'}),"\n",(0,r.jsx)(e.li,{children:'Click "Generate a new client secret" to generate a Client Secret'}),"\n",(0,r.jsx)(e.li,{children:"Copy and save the Client Secret immediately, as it will only be displayed once"}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(e.li,{children:["\n",(0,r.jsxs)(e.p,{children:[(0,r.jsx)(e.strong,{children:"Update Configuration File"}),":"]}),"\n",(0,r.jsxs)(e.ul,{children:["\n",(0,r.jsx)(e.li,{children:"Fill in the obtained Client ID and Client Secret in your application's configuration file:"}),"\n"]}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:"language-yaml",children:"bella:\n  oauth:\n    providers:\n      github:\n        enabled: true\n        client-id: Your GitHub Client ID  # Example: 89a6d5f8c7b3e2a1d0f9\n        client-secret: Your GitHub Client Secret  # Example: 3e7d9c8b5a4f2e1d0c9b8a7f6e5d4c3b2a1f0e9d\n        scope: read:user user:email\n        authUri: https://github.com/login/oauth/authorize\n        tokenUri: https://github.com/login/oauth/access_token\n        userInfoUri: https://api.github.com/user\n"})}),"\n"]}),"\n",(0,r.jsxs)(e.li,{children:["\n",(0,r.jsxs)(e.p,{children:[(0,r.jsx)(e.strong,{children:"Important Notes"}),":"]}),"\n",(0,r.jsxs)(e.ul,{children:["\n",(0,r.jsxs)(e.li,{children:["Ensure the ",(0,r.jsx)(e.code,{children:"redirect-uri"})," exactly matches the callback URL in the GitHub developer settings"]}),"\n",(0,r.jsx)(e.li,{children:"Use HTTPS URLs in production environments"}),"\n",(0,r.jsx)(e.li,{children:"If your application is deployed at a different domain or port, update the configuration accordingly"}),"\n",(0,r.jsxs)(e.li,{children:["GitHub OAuth by default includes public user information; to access email, add the ",(0,r.jsx)(e.code,{children:"user:email"})," permission"]}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(e.li,{children:["\n",(0,r.jsxs)(e.p,{children:[(0,r.jsx)(e.strong,{children:"Test Configuration"}),":"]}),"\n",(0,r.jsxs)(e.ul,{children:["\n",(0,r.jsx)(e.li,{children:"After starting the application, visit the login page"}),"\n",(0,r.jsx)(e.li,{children:'Click the "Login with GitHub" button'}),"\n",(0,r.jsx)(e.li,{children:"You will be redirected to the GitHub authorization page"}),"\n",(0,r.jsx)(e.li,{children:"After authorization, you will be redirected back to the application, completing the login process"}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(e.h3,{id:"environment-variable-configuration-1",children:"Environment Variable Configuration"}),"\n",(0,r.jsx)(e.p,{children:"You can override the settings in the configuration file with environment variables:"}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:"language-bash",children:"# Login type\nexport BELLA_LOGIN_TYPE=oauth\n\n# CAS configuration\nexport BELLA_CAS_SERVER_URL_PREFIX=https://your-cas-server.com/\nexport BELLA_CAS_SERVER_LOGIN_URL=https://your-cas-server.com/login\n\n# OAuth configuration\nexport BELLA_OAUTH_LOGIN_PAGE_URL=http://your-frontend-url/login\nexport BELLA_OAUTH_CLIENT_INDEX=http://your-frontend-url\n\n# Start the application with a specific configuration file\njava -jar bella-openapi.jar --spring.profiles.active=dev\n"})}),"\n",(0,r.jsx)(e.h2,{id:"proxy-configuration",children:"Proxy Configuration"}),"\n",(0,r.jsx)(e.h3,{id:"system-property-configuration",children:"System Property Configuration"}),"\n",(0,r.jsx)(e.p,{children:"You can configure proxy servers using system properties:"}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:"language-bash",children:"-Dbella.proxy.host=127.0.0.1\n-Dbella.proxy.type=http\n-Dbella.proxy.port=8118\n-Dbella.proxy.domains=github.com,google.com\n"})}),"\n",(0,r.jsx)(e.h3,{id:"proxy-types",children:"Proxy Types"}),"\n",(0,r.jsx)(e.p,{children:"Two proxy types are supported: http and socks."}),"\n",(0,r.jsx)(e.h3,{id:"proxy-domains",children:"Proxy Domains"}),"\n",(0,r.jsxs)(e.ul,{children:["\n",(0,r.jsx)(e.li,{children:"You can configure domain filtering rules to specify which domains need proxying"}),"\n",(0,r.jsx)(e.li,{children:"If you only configure the proxy without specifying domains, all domains will be proxied"}),"\n"]}),"\n",(0,r.jsx)(e.hr,{}),"\n",(0,r.jsx)(e.p,{children:(0,r.jsx)(e.em,{children:"Last updated: 2025-03-31"})})]})}function h(n={}){const{wrapper:e}={...(0,t.R)(),...n.components};return e?(0,r.jsx)(e,{...n,children:(0,r.jsx)(d,{...n})}):d(n)}},8453:(n,e,i)=>{i.d(e,{R:()=>l,x:()=>a});var o=i(6540);const r={},t=o.createContext(r);function l(n){const e=o.useContext(t);return o.useMemo((function(){return"function"==typeof n?n(e):{...e,...n}}),[e,n])}function a(n){let e;return e=n.disableParentContext?"function"==typeof n.components?n.components(r):n.components||r:l(n.components),o.createElement(t.Provider,{value:e},n.children)}}}]);