"use strict";(self.webpackChunkdocs_site=self.webpackChunkdocs_site||[]).push([[5353],{5098:(e,n,a)=>{a.r(n),a.d(n,{assets:()=>i,contentTitle:()=>c,default:()=>u,frontMatter:()=>r,metadata:()=>t,toc:()=>s});const t=JSON.parse('{"id":"bella-openapi/core/advanced-features","title":"Advanced features","description":"Function Call","source":"@site/i18n/en/docusaurus-plugin-content-docs/current/bella-openapi/core/advanced-features.md","sourceDirName":"bella-openapi/core","slug":"/bella-openapi/core/advanced-features","permalink":"/en/docs/bella-openapi/core/advanced-features","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{},"sidebar":"documentationSidebar","previous":{"title":"\u56fe\u7247\u7f16\u8f91\u529f\u80fd\u7528\u6237\u624b\u518c","permalink":"/en/docs/bella-openapi/core/images-edit"},"next":{"title":"\u6587\u6863\u89e3\u6790\u63a5\u53e3\u7528\u6237\u624b\u518c","permalink":"/en/docs/bella-openapi/core/document-parse"}}');var l=a(4848),o=a(8453);const r={},c="Advanced features",i={},s=[{value:"Function Call",id:"function-call",level:2},{value:"Private Channel",id:"private-channel",level:2},{value:"Fallback Models",id:"fallback-models",level:2},{value:"Max Wait",id:"max-wait",level:2}];function d(e){const n={code:"code",h1:"h1",h2:"h2",header:"header",p:"p",pre:"pre",...(0,o.R)(),...e.components};return(0,l.jsxs)(l.Fragment,{children:[(0,l.jsx)(n.header,{children:(0,l.jsx)(n.h1,{id:"advanced-features",children:"Advanced features"})}),"\n",(0,l.jsx)(n.h2,{id:"function-call",children:"Function Call"}),"\n",(0,l.jsx)(n.p,{children:"Function Call capability can be enabled for LLM models that do not support Function Call through channel configuration."}),"\n",(0,l.jsx)(n.h2,{id:"private-channel",children:"Private Channel"}),"\n",(0,l.jsx)(n.p,{children:"Cloud services support users to configure their own private channels. Only AK calls under personal account names are allowed."}),"\n",(0,l.jsx)(n.h2,{id:"fallback-models",children:"Fallback Models"}),"\n",(0,l.jsx)(n.p,{children:"Caht completion capability point requests support for alternative models."}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-json",children:'{\n    //...\n    "models": "model1, models2",\n    //...\n}\n'})}),"\n",(0,l.jsx)(n.p,{children:"It will automatically switch to models2 when the request fails with models1.\nThe default maximum number of supported candidate models is 3, which can be adjusted through backend configuration of bella.openapi.max-modes-per request."}),"\n",(0,l.jsx)(n.h2,{id:"max-wait",children:"Max Wait"}),"\n",(0,l.jsx)(n.p,{children:"Looking forward to it"})]})}function u(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,l.jsx)(n,{...e,children:(0,l.jsx)(d,{...e})}):d(e)}},8453:(e,n,a)=>{a.d(n,{R:()=>r,x:()=>c});var t=a(6540);const l={},o=t.createContext(l);function r(e){const n=t.useContext(o);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(l):e.components||l:r(e.components),t.createElement(o.Provider,{value:n},e.children)}}}]);