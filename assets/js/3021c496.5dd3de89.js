"use strict";(self.webpackChunkdocs_site=self.webpackChunkdocs_site||[]).push([[2013],{1702:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>c,contentTitle:()=>l,default:()=>h,frontMatter:()=>o,metadata:()=>i,toc:()=>a});const i=JSON.parse('{"id":"claude-code/share/CLAUDE.example","title":"CLAUDE.md","description":"This file provides guidance to Claude Code (claude.ai/code) when working with code in this repository.","source":"@site/docs/claude-code/share/CLAUDE.example.md","sourceDirName":"claude-code/share","slug":"/claude-code/share/CLAUDE.example","permalink":"/docs/claude-code/share/CLAUDE.example","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{}}');var r=s(4848),t=s(8453);const o={},l="CLAUDE.md",c={},a=[{value:"Project Overview",id:"project-overview",level:2},{value:"Module Architecture",id:"module-architecture",level:2},{value:"Build &amp; Development Commands",id:"build--development-commands",level:2},{value:"Basic Maven Commands",id:"basic-maven-commands",level:3},{value:"Development Scripts",id:"development-scripts",level:3},{value:"Key Architecture Patterns",id:"key-architecture-patterns",level:2},{value:"Protocol Adapter Pattern",id:"protocol-adapter-pattern",level:3},{value:"Multi-Layer Architecture",id:"multi-layer-architecture",level:3},{value:"Database Integration",id:"database-integration",level:3},{value:"Configuration",id:"configuration",level:2},{value:"Testing",id:"testing",level:2},{value:"Key Directories",id:"key-directories",level:2},{value:"Request Processing Flow",id:"request-processing-flow",level:2},{value:"Channel and Provider Management",id:"channel-and-provider-management",level:2},{value:"Development Notes",id:"development-notes",level:2}];function d(e){const n={code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,t.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.header,{children:(0,r.jsx)(n.h1,{id:"claudemd",children:"CLAUDE.md"})}),"\n",(0,r.jsx)(n.p,{children:"This file provides guidance to Claude Code (claude.ai/code) when working with code in this repository."}),"\n",(0,r.jsx)(n.h2,{id:"project-overview",children:"Project Overview"}),"\n",(0,r.jsx)(n.p,{children:"Bella OpenAPI is a multi-module Maven project that provides an OpenAPI gateway for AI services. It acts as a unified interface supporting multiple AI providers (OpenAI, AWS Bedrock, Alibaba Cloud, Huoshan, etc.) through a pluggable adapter pattern."}),"\n",(0,r.jsx)(n.h2,{id:"module-architecture",children:"Module Architecture"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"sdk/"}),": Core SDK with protocol definitions, DTOs, and client interfaces"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"spi/"}),": Service Provider Interface module with authentication and session management (CAS/OAuth)"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"server/"}),": Main Spring Boot application with REST endpoints and business logic"]}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"build--development-commands",children:"Build & Development Commands"}),"\n",(0,r.jsx)(n.h3,{id:"basic-maven-commands",children:"Basic Maven Commands"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"# Build all modules\nmvn clean compile\n\n# Run tests\nmvn test\n\n# Package without tests\nmvn package -DskipTests\n\n# Install to local repository\nmvn install -DskipTests\n"})}),"\n",(0,r.jsx)(n.h3,{id:"development-scripts",children:"Development Scripts"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"# Build the application\n./build.sh\n\n# Run the application (with optimized JVM settings)\n./run.sh\n\n# Generate jOOQ code from database schema\nmvn jooq:generate -pl server\n"})}),"\n",(0,r.jsx)(n.h2,{id:"key-architecture-patterns",children:"Key Architecture Patterns"}),"\n",(0,r.jsx)(n.h3,{id:"protocol-adapter-pattern",children:"Protocol Adapter Pattern"}),"\n",(0,r.jsxs)(n.p,{children:["The core architecture uses the ",(0,r.jsx)(n.strong,{children:"AdaptorManager"})," pattern to route requests to different AI providers:"]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"AdaptorManager"})," manages protocol adapters for each endpoint"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"IProtocolAdaptor"})," interface defines how to communicate with each provider"]}),"\n",(0,r.jsx)(n.li,{children:"Adapters are organized by endpoint type (completion, embedding, tts, asr, etc.)"}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"multi-layer-architecture",children:"Multi-Layer Architecture"}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Controllers"})," (",(0,r.jsx)(n.code,{children:"endpoints/"}),"): REST API endpoints"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Interceptors"})," (",(0,r.jsx)(n.code,{children:"intercept/"}),"): Cross-cutting concerns (auth, quotas, metrics)"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Protocol Layer"})," (",(0,r.jsx)(n.code,{children:"protocol/"}),"): Provider-specific adapters"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Repository Layer"})," (",(0,r.jsx)(n.code,{children:"db/repo/"}),"): Database access with jOOQ"]}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"database-integration",children:"Database Integration"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Uses jOOQ for database access with code generation"}),"\n",(0,r.jsxs)(n.li,{children:["Generated POJOs and Records in ",(0,r.jsx)(n.code,{children:"server/src/codegen/"})]}),"\n",(0,r.jsxs)(n.li,{children:["Database schema initialization scripts in ",(0,r.jsx)(n.code,{children:"server/sql/"})]}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"configuration",children:"Configuration"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["Main config: ",(0,r.jsx)(n.code,{children:"server/src/main/resources/application.yml"})]}),"\n",(0,r.jsx)(n.li,{children:"Multi-environment support with profile-specific configs"}),"\n",(0,r.jsx)(n.li,{children:"Uses Redis for caching (Redisson) and JetCache for L1/L2 caching"}),"\n",(0,r.jsx)(n.li,{children:"Apollo configuration center support (optional)"}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"testing",children:"Testing"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["Test configuration: ",(0,r.jsx)(n.code,{children:"application-ut.yml"})]}),"\n",(0,r.jsxs)(n.li,{children:["API test files in ",(0,r.jsx)(n.code,{children:"server/src/test/resources/"})]}),"\n",(0,r.jsx)(n.li,{children:"Mock implementations available for each protocol adapter"}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"key-directories",children:"Key Directories"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"server/src/main/java/com/ke/bella/openapi/endpoints/"}),": REST controllers"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"server/src/main/java/com/ke/bella/openapi/protocol/"}),": Provider adapters"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"server/src/main/java/com/ke/bella/openapi/intercept/"}),": Request/response interceptors"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"sdk/src/main/java/com/ke/bella/openapi/protocol/"}),": Protocol DTOs and interfaces"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"server/src/main/resources/lua/"}),": Lua scripts for Redis operations"]}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"request-processing-flow",children:"Request Processing Flow"}),"\n",(0,r.jsx)(n.p,{children:"The typical request flow follows this pattern:"}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Endpoint Controller"})," receives HTTP request and validates basic parameters"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Interceptors"})," handle authentication, authorization, quotas, and safety checks"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Channel Router"})," selects appropriate provider/channel based on load balancing and cost"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Protocol Adapter"})," transforms request to provider-specific format"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Cost Handler"})," calculates and records usage metrics"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Response Processing"})," handles streaming/non-streaming responses and metrics collection"]}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"channel-and-provider-management",children:"Channel and Provider Management"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Channels"})," represent specific provider instances with their own configurations"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Models"})," define available AI models and their capabilities per provider"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"API Keys"})," manage authentication and usage quotas per space/user"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Spaces"})," provide multi-tenant isolation with separate configurations"]}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"development-notes",children:"Development Notes"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["When adding new AI providers, implement ",(0,r.jsx)(n.code,{children:"IProtocolAdaptor"})," and register with ",(0,r.jsx)(n.code,{children:"AdaptorManager"})]}),"\n",(0,r.jsx)(n.li,{children:"Protocol-specific DTOs go in SDK module, implementation in server module"}),"\n",(0,r.jsx)(n.li,{children:"Cost calculation and metrics collection are handled through dedicated handlers"}),"\n",(0,r.jsx)(n.li,{children:"Some endpoints support both streaming and non-streaming responses"}),"\n"]})]})}function h(e={}){const{wrapper:n}={...(0,t.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(d,{...e})}):d(e)}},8453:(e,n,s)=>{s.d(n,{R:()=>o,x:()=>l});var i=s(6540);const r={},t=i.createContext(r);function o(e){const n=i.useContext(t);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:o(e.components),i.createElement(t.Provider,{value:n},e.children)}}}]);